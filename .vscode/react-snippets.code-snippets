{
  // Place your Production-React workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "react-component": {
    "scope": "javascriptreact , typescriptreact",
    "prefix": "qwe",
    "body": [
      "import { classNames } from 'shared/lib/classNames/classNames';",
      "import s from './$TM_FILENAME_BASE.module.scss';",
      "import {  memo } from 'react';",
      "interface ${TM_FILENAME_BASE}Props {",
      "className?: string;",
      "}",
      "export const $TM_FILENAME_BASE = memo(({ className}: ${TM_FILENAME_BASE}Props) => {",
      "return (",
      "<div className={classNames(s.$TM_FILENAME_BASE,{},[className])}>",
      "</div>",
      ")});"
    ],
    "description": "description"
  },
  "test": {
    "scope": "javascriptreact , typescriptreact, typescript",
    "prefix": "asd",
    "body": [
      "describe('${TM_FILENAME_BASE/([^.]+).*/${1:/upcase}/}', () => {",
      "test('return value', () => {",
      " expect().toEqual();",
      " });",
      " });",
    ],
    "description": "description"
  }
}